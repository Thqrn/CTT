{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-ctt-wiki","title":"Welcome to the CTT wiki!","text":"<p> Join the Discord!</p> <p>Couleur Tweak Tips (CTT) is a Discord server and wiki, dedicated to:</p> <ul> <li>Content creation software configuration: OBS, VEGAS..</li> <li>Applying motion blur effects to videos: frame blending, blur, Smoothie..</li> <li>Configuring operating systems: Windows/Linux' appearance &amp; behavior, keyboard shortcuts</li> <li>Quality of life software: ShareX, AltSnap, PowerToys, SpotX, MAS, espanso, SearchEverything</li> </ul> <p>Browse through the left pane to get started</p>"},{"location":"video/","title":"Introduction","text":"<p>This section of the wiki will show you how to optimally configure software to help you produce high-quality and optionally motion blurred videos with your own optimised personal workflow.</p>"},{"location":"video/#definitions","title":"Definitions","text":""},{"location":"video/#frame-blending","title":"Frame blending","text":"<p>The most common, it is without (unlike other methods like RSMB) any smearing of HUDs or general artifacting. Commonly this is done from a very high FPS (e.g. 540) down to a common FPS, i.e. 60 or 30.</p> <p>In general, the higher the input FPS, the smoother the final output would be, due to more blur frames making the blur look more seamless. Blur frames are how many frames are blended together, so <code>blur frames = input fps / output fps</code>.</p> <p>Video editors such as Vegas Pro and Adobe Premiere Pro have these features built-in. However, we recommend using seperate programs such as blur first to pre-render the videos, therefore you don't have any lag in your video editor as well as having much more customisation.</p>"},{"location":"video/#interpolation","title":"Interpolation","text":"<p>Video interpolation is a video processing technique that creates new frames between existing ones, effectively increasing the video's frames per second (FPS) using algorithms or AI.</p> <p>RIFE and the SVP algorithm are commonly implemented into frame blending applications to interpolate.</p> <p>It generates frames from the data it has, and the higher the input FPS, the smaller the window between the two points are, which means more FPS the better.</p>"},{"location":"video/#video-encoding-and-decoding","title":"Video encoding and decoding","text":"<p>Video encoding is the process of converting one format (e.g. the raw visual data captured during recording) into a digital codec, with decoding converting videos into a format that can be displayed and viewed on a screen.</p> <p>A video codec is software or hardware that compresses and decompresses digital video to make file sizes smaller and make storage and distribution of videos easier.</p>"},{"location":"video/obs/","title":"Open Broadcaster Software","text":""},{"location":"video/obs/#introduction","title":"Introduction","text":"<p>Open Broadcaster Software (OBS) is a free and open-source software for live streaming and recording. Here you'll learn how to configure and install OBS.</p>"},{"location":"video/obs/#installing-obs","title":"Installing OBS","text":"<p>You should the latest version of OBS from the official downloads page. This page provides multiple sources from which you can install it.</p>"},{"location":"video/obs/#alternative-sources","title":"Alternative sources","text":"WindowsLinuxmacOS <ul> <li>WinGet: <code>winget install -e --id OBSProject.OBSStudio</code></li> <li>Scoop: <code>scoop bucket add extras; scoop install extras/obs-studio</code></li> <li>Chocolatey: <code>choco install obs-studio</code></li> </ul> <ul> <li>Flathub (recommended): <code>flatpak install flathub com.obsproject.Studio</code></li> <li>Arch-based distros: <code>pacman -S obs-studio</code></li> <li>Ubuntu-based distros (copied from OBS download page):   <pre><code>sudo add-apt-repository ppa:obsproject/obs-studio\nsudo apt update\nsudo apt install ffmpeg obs-studio\n</code></pre></li> </ul> <p>Unsupported</p> <p>At the moment, OBS settings for macOS aren't considered in the documentation.</p> <ul> <li>Homebrew: <code>brew install --cask obs</code></li> </ul>"},{"location":"video/obs/#initial-configuration","title":"Initial configuration","text":"Video Walkthrough Recording formats <ul> <li>MPEG-4 (.mp4) has the best compatibility, and will work for Discord embeds and in pretty much any video editor</li> <li>Matroska Video (.mkv) has decent compatibility, but won't work for Discord embeds. However, if OBS suddenly closes or your computer unexpectedly shuts down, your recording will be saved, unlike <code>.mp4</code>.<ul> <li>You can convert <code>.mkv</code> and other formats to regular <code>.mp4</code> videos within OBS using remuxing.</li> </ul> </li> </ul> How to use remuxing <ol> <li>Click Cancel on the Auto-Configuration Wizard to skip it</li> <li>Open Settings  Video</li> <li>Change the Output (Scaled) Resolution to exactly match your Base (Canvas) Resolution</li> <li>Switch Common FPS Values  Fractional FPS Value and modify the numerator to change your desired output FPS</li> <li>Go to the Output tab, and change the Output Mode to Advanced<ul> <li>Recording Format: Use MPEG-4 (.mp4) for compatibility or Matroska Video (.mkv).</li> </ul> </li> <li>Go to the Audio tab, and under Global Audio Devices, configure your audio devices</li> <li>Click OK on the Settings window</li> <li>Adjust the Audio Mixer to your liking</li> <li>Add a Display Capture source (unless you're on Linux)</li> <li>At the top, go to Docks  Stats, then drag it to the side of the preview to dock it, then adjust the sizing how you'd like</li> </ol>"},{"location":"video/obs/#stats-dock","title":"Stats dock","text":"<p>The stats dock is used for monitoring if your OBS settings can keep up with your computer, as well as other statistics shown.</p> <p>The main two statistics to indicate lag are encoding lag and rendering lag. If one of these statistics are increasing when recording your game in movement, then you should adjust your OBS settings.</p>"},{"location":"video/obs/#replay-buffer","title":"Replay Buffer","text":"<p>Replay buffer is a feature in OBS that allows users to save only the last specified seconds of a recording to a video file on the press of a button or hotkey. It uses RAM as a temporary storage, similar to NVIDIA's Shadowplay.</p> <p>It's very useful for testing encoder settings (with lots of movement in the test) without making lots of useless video files, as well as easily clipping moments in gameplay or whatever else.</p> <p>You can configure it in the Replay Buffer tab in Output, and you can set hotkeys for it in Hotkeys after it has been enabled.</p>"},{"location":"video/obs/#where-to-go-from-here","title":"Where to go from here","text":"<p>Ranking</p> <p>NVIDIA's encoder (NVENC) is by far the best for recording, as it is fast and not resource intensive, unless you push it to its limits. Other encoders may struggle to record very high FPS, such as 240 FPS and over.</p> <p>From here, you'll want to go to the page which fits your GPU.</p> <ul> <li> NVIDIA NVENC</li> <li> AMD AMF</li> <li> Intel QuickSync</li> </ul>"},{"location":"video/obs/#software-encoding","title":"Software Encoding","text":"<p>These are much slower and more resource intensive than the GPU/hardware-accelerated encoders listed above, but they're also universally compatible and much more filesize efficient.</p> <ul> <li> CPU x264</li> </ul>"},{"location":"video/obs/amf/","title":"AMF OBS Configuration","text":""},{"location":"video/obs/nvenc/","title":"NVIDIA NVENC","text":"<ol> <li> <p> Why this preset? Despite the name it doesn't affect your video quality. Our testing showed that \"P1: Fastest (Lowest Quality)\" results in the least encoding lag, but produces a bigger filesize. While \"P7: Slowest (Best Quality)\" significantly reduces the FPS you can record at, but results in a smaller filesize.</p> </li> <li> <p> Why this profile? Using \"high\" profile on newer GPUs may limit the fps you can record at, but it effectively reduces the file size. This won't affect your video quality.</p> </li> <li> <p> Why CQP over CBR and VBR? It adjusts the bitrate for each individual frame, resulting in better video quality. Compared to CBR which uses a fixed bitrate, and VBR which varies the bitrate based on the complexity of the video, CQP can provide more efficient file size management.</p> </li> <li> <p> Why these particular values? The CQ Level ranges from 1 (lossless, resulting in huge files) to 30 (very lossy, resulting in small files).  </p> <p> Click here to see the Quality vs CQP Level Graph</p> </li> <li> <p> Why should you use H.264? HEVC is more efficient but harder to encode, leading to worse performance. The same applies to AV1 on the RTX 40 series GPUs.</p> </li> <li> <p> Why CQP over CBR and VBR? It adjusts the bitrate for each individual frame, resulting in better video quality. Compared to CBR which uses a fixed bitrate, and VBR which varies the bitrate based on the complexity of the video, CQP can provide more efficient file size management.</p> </li> <li> <p> Why these particular values? The CQ Level ranges from 1 (lossless, resulting in huge files) to 30 (very lossy, resulting in small files).  </p> <p> Click here to see the Quality vs CQP Level Graph</p> </li> <li> <p> Why this profile? On newer GPUs, \"baseline\" may reduce encoding lag when recording at high FPS at the cost of the bigger file size. This won't affect your video quality.</p> </li> <li> <p> Why this preset? Despite the name it doesn't affect your video quality. Our testing showed that \"P1: Fastest (Lowest Quality)\" results in the least encoding lag, but produces a bigger filesize. While \"P7: Slowest (Best Quality)\" significantly reduces the FPS you can record at, but results in a smaller filesize.</p> </li> </ol>"},{"location":"video/obs/nvenc/#nvenc-obs-configuration","title":"NVENC OBS Configuration","text":""},{"location":"video/obs/nvenc/#information","title":"Information","text":"Support <p>NVENC is NVIDIA's on-chip encoder for their desktop graphics cards, with 1000 series GPUs and above considered ideal for high FPS recording.</p> <p>Check which NVENC features your NVIDIA GPU supports on NVIDIA's video encode and decode GPU support matrix page.</p> <p>If your NVIDIA GPU doesn't support NVENC, try seeing if your iGPU has a hardware encoder or use CPU x264 as a last resort.</p> <p>Before following this, make sure that you've followed the initial configuration first. Make sure that you test your settings! See Replay Buffer.</p>"},{"location":"video/obs/nvenc/#configuration","title":"Configuration","text":"Maximum PerformanceBest Filesize <p> These settings maximize recording performance at high FPS.</p> Recording Settings <p> </p> Encoder Settings <p> </p> <p>Recording Settings</p> <ul> <li>Video Encoder: Use NVIDIA NVENC H.264. (5)  </li> </ul> <p>Encoder Settings</p> <ul> <li> <p>Rate Control: CQP (6)</p> </li> <li> <p>CQ Level: Use 15-18, with higher being lower quality and lower being better quality. (7)</p> </li> <li> <p>Keyframe Interval: Leave at 0 (auto) for best performance.</p> </li> <li> <p>Preset: Use P1: Fastest (Lowest Quality) for highest FPS. (9)</p> </li> <li> <p>Tuning: Leave on High Quality.</p> </li> <li> <p>Profile: Use baseline. (8)</p> </li> <li> <p>Look Ahead &amp; Psycho Visual Tuning: Leave Off for max performance. </p> </li> <li> <p>GPU &amp; Max B-Frames: Leave GPU at 0 if single GPU. Leave B-Frames at 0.</p> </li> </ul> <p> These settings optimize for smallest files without quality loss.</p> <p>Recording Settings</p> <ul> <li>Video Encoder: Use NVIDIA NVENC HEVC (or AV1 if you have a 40 series GPU).<ul> <li>If you want the best compatibility (including embeds on Discord), use NVIDIA NVENC H264 at the cost of extra file size.</li> </ul> </li> </ul> <p>Encoder Settings</p> <ul> <li> <p>Rate Control: CQP (3)</p> </li> <li> <p>CQ Level: Use 18-23, with higher being lower quality and lower being better quality. (4)</p> </li> <li> <p>Preset: Use P7: Slowest (Best Quality). (1)</p> </li> <li> <p>Profile: Use high. (2)</p> </li> </ul>"},{"location":"video/obs/quicksync/","title":"QuickSync OBS Configuration","text":""},{"location":"video/obs/x264/","title":"x264 OBS Configuration","text":""},{"location":"video/obs/linux/","title":"Linux OBS Configuration","text":"<p>On OBS for Linux, there's not much options by default for high FPS or otherwise low resource recording like Windows. This is due to inefficient capture methods:</p> <ul> <li>Screen Capture (XSHM): Generally can't record above 120 FPS without lag</li> <li>Window Capture (Xcomposite): Much more efficient, but still limited to ~540 FPS</li> <li>Pipewire Capture: Generally can't record above 60 FPS without lag</li> </ul> <p>If the default Window Capture (Xcomposite) works just fine for you, you can stop here. However, if you want more efficient capture methods, you will have to go with third-party plugins, which may or may not be worth it.</p>"},{"location":"video/obs/linux/#third-party-plugins","title":"Third-party plugins","text":"<ul> <li> NvFBC (<code>obs-nvfbc</code> patched for high FPS)<ul> <li>Requires NVIDIA, OBS 27 and X.Org</li> <li>Screen capture</li> </ul> </li> <li> OBS VkCapture (<code>obs-vkcapture</code>)<ul> <li>Game capture</li> </ul> </li> </ul>"},{"location":"video/obs/linux/nvfbc/","title":"NvFBC","text":""},{"location":"video/obs/linux/nvfbc/#information","title":"Information","text":"<p>For NVIDIA users, NvFBC is available with some driver patching. NvFBC is a feature like NVENC, except from that it captures your screen directly from the framebuffer very efficiently.</p> <p>Overall, this works very well for high FPS recording, and is on a par with Windows' default Display Capture source, if not better.</p> <p>However, unfortunately, this has some issues:</p> <ul> <li>The NvFBC plugin is currently incompatible with OBS 28+<ul> <li>Maybe this could be fixed in the future</li> </ul> </li> <li>You need to be on the proprietary NVIDIA drivers</li> <li>You need to use X.Org (not Wayland)<ul> <li>See this with <code>echo $XDG_SESSION_TYPE</code></li> </ul> </li> </ul>"},{"location":"video/obs/linux/nvfbc/#installation","title":"Installation","text":"<ol> <li>Install <code>nvidia-utils-nvlax</code> from the AUR, which will replace <code>nvidia-utils</code> with a patched version. It does 2 patches, all automatically:<ul> <li>NVENC patch: removes restriction on maximum number of simultaneous NVENC video encoding sessions imposed by Nvidia to consumer-grade GPUs</li> <li>NvFBC patch (required): allows to use NvFBC on consumer-grade GPUs</li> </ul> </li> <li>Install <code>downgrade</code> from the AUR</li> <li>Run <code>sudo downgrade --ala-only obs-studio</code>, install the latest version of OBS 27 (which is <code>27.2.4 2</code>)</li> <li>Install <code>obs-nvfbc-high-fps-git</code> from the AUR, which is the 'NvFBC Source' OBS plugin, patched for high FPS values</li> <li>Open OBS, and add the 'NvFBC Source'</li> <li>Configure the NvFBC source (test out settings), make the FPS the same as the OBS recording FPS</li> </ol>"},{"location":"video/obs/linux/nvfbc/#tips","title":"Tips","text":"<ul> <li>Enable Smooth FPS in Minecraft or cap your FPS, just so that OBS doesn't lag</li> <li>Toggle/disable compositing in your window manager/desktop environment</li> <li>You can use <code>teres</code> in the AUR to frame blend and interpolate</li> </ul>"},{"location":"video/obs/linux/nvfbc/#references","title":"References","text":"<ul> <li>Patched OBS NvFBC plugin</li> <li>Downgrade Pacman packages</li> <li>Patched <code>nvidia-utils</code></li> <li>OBS NvFBC plugin page</li> </ul>"},{"location":"video/obs/linux/obs-vkcapture/","title":"OBS VkCapture","text":""}]}